--find month over month growth comparison for 2022 and 2023 sales eg : jan 2022 vs jan 2023
with cte as(
select extract(year from order_date)as order_year, 
extract(month from order_date)as order_month, 
sum(sale_price) as sales
from df_orders
group by extract(year from order_date), extract(month from order_date)
order by extract(year from order_date), extract(month from order_date) )
select order_month,
sum(case when order_year=2022 then sales else 0 end) as sales_2022,
sum(case when order_year=2023 then sales else 0 end) as sales_2023
from cte
group by order_month
order by order_month

--for each category which month had highest sales 
with cte as (
select category,
to_char(order_date,'yyyyMM')as order_year_month, 
sum(sale_price) as sales
from df_orders
group by category,to_char(order_date,'yyyyMM') )
select * from
(select * , RANK() OVER (partition by category ORDER BY sales DESC) as rk
from cte) A 
where rk=1


-- which sub category had highest growth by profit in 2023 compare to 2022
with cte as(
select sub_category, extract(year from order_date)as order_year,  
sum(sale_price) as sales
from df_orders
group by sub_category,extract(year from order_date) )
,cte2 as (
select sub_category,
sum(case when order_year=2022 then sales else 0 end) as sales_2022,
sum(case when order_year=2023 then sales else 0 end) as sales_2023
from cte
group by sub_category
order by sub_category )
select  *
,(sales_2023-sales_2022)*100/sales_2022 as profit
from  cte2
order by (sales_2023-sales_2022)*100/sales_2022 desc
limit 1




